#!/usr/bin/env python

import sys
try:
    # to access the netio via http calls
    import urllib2

    # time is needed to sleep during manual power cycle
    import time
except ImportError, err:
    print >> sys.stderr, "\nCould not import all needed Python modules. Please make sure, that you have the package python installed!\nError message was: " + str(
        err
    )
    sys.exit(4)


def poweron(host, port):
    # that's needed for direct access without proxy
    proxy_support = urllib2.ProxyHandler({})
    opener = urllib2.build_opener(proxy_support)
    urllib2.install_opener(opener)
    # access the web interface...
    portstring = {"1": "1uuu", "2": "u1uu", "3": "uu1u", "4": "uuu1"}
    usock = urllib2.urlopen(
        "http://" + host + "/tgi/control.tgi?l=p:admin:admin&p=" +
        portstring[port]
    )
    usock.close()


def poweroff(host, port):
    # that's needed for direct access without proxy
    proxy_support = urllib2.ProxyHandler({})
    opener = urllib2.build_opener(proxy_support)
    urllib2.install_opener(opener)
    # access the web interface ...
    portstring = {"1": "0uuu", "2": "u0uu", "3": "uu0u", "4": "uuu0"}
    url = "http://" + host + "/tgi/control.tgi?l=p:admin:admin&p=" + portstring[
        port
    ]
    try:
        usock = urllib2.urlopen(
            "http://" + host + "/tgi/control.tgi?l=p:admin:admin&p=" +
            portstring[port]
        )
    except:
        print >> sys.stderr, "Url <%s> not reachable url" % url
        raise
    usock.close()


def powercycle(host, port):
    poweroff(host, port)
    time.sleep(2)
    poweron(host, port)


def powerstatus(host, port):
    # that's needed for direct access without proxy
    proxy_support = urllib2.ProxyHandler({})
    opener = urllib2.build_opener(proxy_support)
    urllib2.install_opener(opener)
    # get the contents of the main page
    usock = urllib2.urlopen(
        "http://" + host + "/tgi/control.tgi?l=p:admin:admin&p=l"
    )
    data = usock.readlines()
    usock.close()
    states = {"0": "OFF", "1": "ON"}
    places = {"1": 6, "2": 8, "3": 10, "4": 12}
    return states[data[0][places[port]]]
    # if we got this far, something is wrong with the website
    return "ERROR"
